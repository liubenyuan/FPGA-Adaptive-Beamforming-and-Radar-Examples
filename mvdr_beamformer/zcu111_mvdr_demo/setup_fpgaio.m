function setup_fpgaio(hFPGA,ReadFrameLength)

addAXI4SlaveInterface(hFPGA, ...
    "InterfaceID", "AXI4", ...
    "BaseAddress", 0xA0000000, ...
    "AddressRange", 0x10000);

ports = hdlcoder.DUTPort("IP_Reset", ...
    "Direction", "INOUT", ...
    "DataType", "logical", ...
    "IsComplex", false, ...
    "Dimension", [1 1], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x000");

ports(end+1) = hdlcoder.DUTPort("tx_steering_coeffs_src1", ...
    "Direction", "INOUT", ...
    "DataType", numerictype(1,18,16), ...
    "IsComplex", false, ...
    "Dimension", [1 8], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x100");

ports(end+1) = hdlcoder.DUTPort("tx_steering_coeffs_src2", ...
    "Direction", "INOUT", ...
    "DataType", numerictype(1,18,16), ...
    "IsComplex", false, ...
    "Dimension", [1 8], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x140");

ports(end+1) = hdlcoder.DUTPort("rx_steering_coeffs", ...
    "Direction", "INOUT", ...
    "DataType", numerictype(1,18,16), ...
    "IsComplex", false, ...
    "Dimension", [1 8], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x180");

ports(end+1) = hdlcoder.DUTPort("rx_cal_coeffs", ...
    "Direction", "INOUT", ...
    "DataType", numerictype(1,18,14), ...
    "IsComplex", false, ...
    "Dimension", [1 8], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x1C0");

ports(end+1) = hdlcoder.DUTPort("tx_src_gains", ...
    "Direction", "INOUT", ...
    "DataType", numerictype(1,16,14), ...
    "IsComplex", false, ...
    "Dimension", [1 2], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x128");

ports(end+1) = hdlcoder.DUTPort("rx_capture_length", ...
    "Direction", "INOUT", ...
    "DataType", "uint32", ...
    "IsComplex", false, ...
    "Dimension", [1 1], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x124");

ports(end+1) = hdlcoder.DUTPort("rx_capture_start", ...
    "Direction", "INOUT", ...
    "DataType", "logical", ...
    "IsComplex", false, ...
    "Dimension", [1 1], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x134");

ports(end+1) = hdlcoder.DUTPort("rx_capture_src", ...
    "Direction", "INOUT", ...
    "DataType", numerictype(0,2,0), ...
    "IsComplex", false, ...
    "Dimension", [1 1], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x164");

ports(end+1) = hdlcoder.DUTPort("rx_mvdr_enable", ...
    "Direction", "INOUT", ...
    "DataType", "logical", ...
    "IsComplex", false, ...
    "Dimension", [1 1], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x138");

ports(end+1) = hdlcoder.DUTPort("tx_nco_enable", ...
    "Direction", "INOUT", ...
    "DataType", "logical", ...
    "IsComplex", false, ...
    "Dimension", [1 1], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x168");

ports(end+1) = hdlcoder.DUTPort("tx_nco_inc", ...
    "Direction", "INOUT", ...
    "DataType", numerictype(1,14,0), ...
    "IsComplex", false, ...
    "Dimension", [1 1], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x16C");

ports(end+1) = hdlcoder.DUTPort("internal_loopback", ...
    "Direction", "INOUT", ...
    "DataType", "logical", ...
    "IsComplex", false, ...
    "Dimension", [1 1], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x170");

ports(end+1) = hdlcoder.DUTPort("diag_loading", ...
    "Direction", "INOUT", ...
    "DataType", numerictype(1,23,18), ...
    "IsComplex", false, ...
    "Dimension", [1 1], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x13C");

ports(end+1) = hdlcoder.DUTPort("computed_weights", ...
    "Direction", "OUT", ...
    "DataType", numerictype(1,26,22), ...
    "IsComplex", false, ...
    "Dimension", [1 8], ...
    "IOInterface", "AXI4", ...
    "IOInterfaceMapping", "0x200");

mapPort(hFPGA,ports);

% AXI4-Stream DMA
addAXI4StreamInterface(hFPGA, ...
    "InterfaceID", "AXI4-Stream DMA", ...
    "WriteEnable", false, ...
    "ReadEnable", true, ...
    "ReadTimeout", 0, ...
    "ReadFrameLength", ReadFrameLength);

hPort_s2mm_data = hdlcoder.DUTPort("s2mm_data", ...
    "Direction", "OUT", ...
    "DataType", 'int32', ...
    "Dimension", [1 1], ...
    "IOInterface", "AXI4-Stream DMA");

mapPort(hFPGA, hPort_s2mm_data);

% Force DMA setup
setup(hFPGA.Interfaces(2));

end

